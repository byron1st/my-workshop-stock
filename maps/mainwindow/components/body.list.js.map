{"version":3,"sources":["mainwindow/components/body.list.jsx"],"names":["util","c","eventActions","BodyList","eventList","props","searchTerm","filter","event","productName","includes","text","EVENT_TYPE","READY","PROCESSING","DONE","isArchivedVisible","propTypes","array","isRequired","string","bool","object","HistorySegment","toggleArchived","type","_toggleArchived","_getSegmentHeader","_getEventListView","_getArchivedHeader","ARCHIVED","map","index","status","id","amount","Date","date","archivedText","dispatch","TOGGLE_ARCHIVED","Event","icon","leftButton","rightButton","_getIconButton","_delete","_approve","_disapprove","getCurrencyValue","getDateString","DELETE_EVENT","eventIndex","APPROVE_EVENT","DISAPPROVE_EVENT","color","onClickFunction","number","SearchBar","_search","e","SEARCH_PRODUCTNAME","target","value"],"mappings":"AAAA;;;;;;;;AAEA;;;;AAEA;;IAAYA,I;;AACZ;;;;AACA;;IAAYC,C;;AACZ;;IAAYC,Y;;;;;;;;;;;;IAESC,Q;;;;;;;;;;;6BACT;AAAA;;AACR,UAAIC,kBAAJ;AACA,UAAI,KAAKC,KAAL,CAAWC,UAAf,EAA2B;AACzBF,oBAAY,KAAKC,KAAL,CAAWD,SAAX,CAAqBG,MAArB,CAA4B;AAAA,iBAASC,MAAMC,WAAN,CAAkBC,QAAlB,CAA2B,OAAKL,KAAL,CAAWC,UAAtC,CAAT;AAAA,SAA5B,CAAZ;AACD,OAFD,MAEO;AACLF,oBAAY,KAAKC,KAAL,CAAWD,SAAvB;AACD;AACD,aACE;AAAA;AAAA,UAAK,IAAG,UAAR;AACE;AAAA;AAAA,YAAI,WAAU,8BAAd;AACG,eAAKC,KAAL,CAAWM,IAAX,CAAgB,SAAhB;AADH,SADF;AAIE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE,wCAAC,SAAD,IAAW,MAAM,KAAKN,KAAL,CAAWM,IAA5B,GADF;AAEE;AAAA;AAAA,cAAK,WAAU,8BAAf;AACE;AAAA;AAAA,gBAAK,WAAU,KAAf;AACE,4CAAC,cAAD,IAAgB,MAAMV,EAAEW,UAAF,CAAaC,KAAnC,EAA0C,WAAWT,SAArD,EAAgE,MAAM,KAAKC,KAAL,CAAWM,IAAjF,GADF;AAEE,4CAAC,cAAD,IAAgB,MAAMV,EAAEW,UAAF,CAAaE,UAAnC,EAA+C,WAAWV,SAA1D,EAAqE,MAAM,KAAKC,KAAL,CAAWM,IAAtF,GAFF;AAGE,4CAAC,cAAD,IAAgB,MAAMV,EAAEW,UAAF,CAAaG,IAAnC,EAAyC,WAAWX,SAApD,EAA+D,mBAAmB,KAAKC,KAAL,CAAWW,iBAA7F,EAAgH,MAAM,KAAKX,KAAL,CAAWM,IAAjI;AAHF;AADF;AAFF;AAJF,OADF;AAiBD;;;;;;kBAzBkBR,Q;;AA2BrBA,SAASc,SAAT,GAAqB;AACnBb,aAAW,iBAAUc,KAAV,CAAgBC,UADR;AAEnBb,cAAY,iBAAUc,MAAV,CAAiBD,UAFV;AAGnBH,qBAAmB,iBAAUK,IAAV,CAAeF,UAHf;AAInBR,QAAM,iBAAUW,MAAV,CAAiBH;AAJJ,CAArB;;IAOMI,c;;;;;;;;;;;6BACM;AAAA;;AACR,UAAIC,iBAAiB,EAArB;AACA,UAAI,KAAKnB,KAAL,CAAWoB,IAAX,KAAoBxB,EAAEW,UAAF,CAAaG,IAArC,EAA2C;AACzC,YAAI,KAAKV,KAAL,CAAWW,iBAAf,EAAkC;AAChCQ,2BAAiB;AAAA;AAAA,cAAK,WAAU,YAAf;AACf;AAAA;AAAA,gBAAG,MAAK,GAAR,EAAY,SAAS;AAAA,yBAAM,OAAKE,eAAL,CAAqB,KAArB,CAAN;AAAA,iBAArB;AAAyD,mBAAKrB,KAAL,CAAWM,IAAX,CAAgB,eAAhB;AAAzD;AADe,WAAjB;AAGD,SAJD,MAIO;AACLa,2BAAiB;AAAA;AAAA,cAAK,WAAU,YAAf;AACf;AAAA;AAAA,gBAAG,MAAK,GAAR,EAAY,SAAS;AAAA,yBAAM,OAAKE,eAAL,CAAqB,IAArB,CAAN;AAAA,iBAArB;AAAwD,mBAAKrB,KAAL,CAAWM,IAAX,CAAgB,eAAhB;AAAxD;AADe,WAAjB;AAGD;AACF;AACD,aACE;AAAA;AAAA,UAAK,WAAU,QAAf;AACE;AAAA;AAAA,YAAK,WAAU,iCAAf;AACG,eAAKN,KAAL,CAAWM,IAAX,CAAgB,KAAKgB,iBAAL,CAAuB,KAAKtB,KAAL,CAAWoB,IAAlC,CAAhB,CADH;AAEGD;AAFH,SADF;AAKE;AAAA;AAAA,YAAK,WAAU,gCAAf;AACG,eAAKI,iBAAL,CAAuB,KAAKvB,KAAL,CAAWD,SAAlC,EAA6C,KAAKC,KAAL,CAAWoB,IAAxD;AADH,SALF;AAQG,aAAKpB,KAAL,CAAWW,iBAAX,GAA+B,KAAKa,kBAAL,CAAwB,KAAKxB,KAAL,CAAWM,IAAX,CAAgB,UAAhB,CAAxB,CAA/B,GAAsF,EARzF;AASE;AAAA;AAAA,YAAK,WAAU,gCAAf;AACG,eAAKN,KAAL,CAAWW,iBAAX,GAA+B,KAAKY,iBAAL,CAAuB,KAAKvB,KAAL,CAAWD,SAAlC,EAA6CH,EAAEW,UAAF,CAAakB,QAA1D,CAA/B,GAAqG;AADxG;AATF,OADF;AAeD;;;sCACkB1B,S,EAAWqB,I,EAAM;AAAA;;AAClC,aAAOrB,UAAU2B,GAAV,CAAc,UAACvB,KAAD,EAAQwB,KAAR,EAAkB;AACrC,YAAIP,SAASjB,MAAMyB,MAAnB,EAA2B;AACzB,iBAAO,8BAAC,KAAD,IAAO,KAAKzB,MAAM0B,EAAlB;AACL,yBAAa1B,MAAMC,WADd;AAEL,oBAAQD,MAAM2B,MAFT;AAGL,kBAAM,IAAIC,IAAJ,CAAS5B,MAAM6B,IAAf,CAHD;AAIL,mBAAOL,KAJF;AAKL,kBAAMP,IALD;AAML,kBAAM,OAAKpB,KAAL,CAAWM,IANZ,GAAP;AAOD,SARD,MAQO;AACL;AACD;AACF,OAZM,CAAP;AAaD;;;sCACkBc,I,EAAM;AACvB,cAAQA,IAAR;AACA,aAAKxB,EAAEW,UAAF,CAAaC,KAAlB;AACE,iBAAO,OAAP;AACF,aAAKZ,EAAEW,UAAF,CAAaE,UAAlB;AACE,iBAAO,YAAP;AACF,aAAKb,EAAEW,UAAF,CAAaG,IAAlB;AACE,iBAAO,MAAP;AANF;AAQD;;;uCACmBuB,Y,EAAc;AAChC,aACE;AAAA;AAAA,UAAI,WAAU,6BAAd;AACGA;AADH,OADF;AAKD;;;oCACgBtB,iB,EAAmB;AAClC,2BAAWuB,QAAX,CAAoBrC,aAAasC,eAAjC,EAAkDxB,iBAAlD;AACD;;;;;;AAEHO,eAAeN,SAAf,GAA2B;AACzBQ,QAAM,iBAAUL,MAAV,CAAiBD,UADE;AAEzBf,aAAW,iBAAUc,KAAV,CAAgBC,UAFF;AAGzBH,qBAAmB,iBAAUK,IAHJ;AAIzBV,QAAM,iBAAUW,MAAV,CAAiBH;AAJE,CAA3B;;IAOMsB,K;;;;;;;;;;;6BACM;AAAA;;AACR,UAAIC,aAAJ;AAAA,UAAUP,eAAV;AACA,UAAI,KAAK9B,KAAL,CAAW8B,MAAX,GAAoB,CAAxB,EAA2B;AACzBO,eAAO,qCAAG,WAAU,eAAb,GAAP;AACAP,iBAAS,KAAK9B,KAAL,CAAW8B,MAAX,GAAoB,CAAC,CAA9B;AACD,OAHD,MAGO;AACLO,eAAO,qCAAG,WAAU,WAAb,GAAP;AACAP,iBAAS,KAAK9B,KAAL,CAAW8B,MAApB;AACD;;AAED,UAAIQ,mBAAJ;AAAA,UAAgBC,oBAAhB;AACA,cAAQ,KAAKvC,KAAL,CAAWoB,IAAnB;AACA,aAAKxB,EAAEW,UAAF,CAAaC,KAAlB;AACE8B,uBAAa,KAAKE,cAAL,CAAoB,EAApB,EAAwB,QAAxB,EAAkC;AAAA,mBAAM,OAAKC,OAAL,CAAa,OAAKzC,KAAL,CAAW2B,KAAxB,EAA+B,OAAK3B,KAAL,CAAWM,IAA1C,CAAN;AAAA,WAAlC,CAAb;AACAiC,wBAAc,KAAKC,cAAL,CAAoB,SAApB,EAA+B,WAA/B,EAA4C;AAAA,mBAAM,OAAKE,QAAL,CAAc,OAAK1C,KAAL,CAAW2B,KAAzB,CAAN;AAAA,WAA5C,CAAd;AACA;AACF,aAAK/B,EAAEW,UAAF,CAAaE,UAAlB;AACE6B,uBAAa,KAAKE,cAAL,CAAoB,EAApB,EAAwB,mBAAxB,EAA6C;AAAA,mBAAM,OAAKG,WAAL,CAAiB,OAAK3C,KAAL,CAAW2B,KAA5B,CAAN;AAAA,WAA7C,CAAb;AACAY,wBAAc,KAAKC,cAAL,CAAoB,SAApB,EAA+B,WAA/B,EAA4C;AAAA,mBAAM,OAAKE,QAAL,CAAc,OAAK1C,KAAL,CAAW2B,KAAzB,CAAN;AAAA,WAA5C,CAAd;AACA;AACF,aAAK/B,EAAEW,UAAF,CAAaG,IAAlB;AACE4B,uBAAa,KAAKE,cAAL,CAAoB,EAApB,EAAwB,mBAAxB,EAA6C;AAAA,mBAAM,OAAKG,WAAL,CAAiB,OAAK3C,KAAL,CAAW2B,KAA5B,CAAN;AAAA,WAA7C,CAAb;AACAY,wBAAc,KAAKC,cAAL,CAAoB,EAApB,EAAwB,SAAxB,EAAmC;AAAA,mBAAM,OAAKE,QAAL,CAAc,OAAK1C,KAAL,CAAW2B,KAAzB,CAAN;AAAA,WAAnC,CAAd;AACA;AACF,aAAK/B,EAAEW,UAAF,CAAakB,QAAlB;AACEa,uBAAa,KAAKE,cAAL,CAAoB,EAApB,EAAwB,MAAxB,EAAgC;AAAA,mBAAM,OAAKG,WAAL,CAAiB,OAAK3C,KAAL,CAAW2B,KAA5B,CAAN;AAAA,WAAhC,CAAb;AACA;AAfF;;AAkBA,aACE;AAAA;AAAA,UAAK,WAAU,MAAf;AACE;AAAA;AAAA,YAAK,WAAU,uBAAf;AACE;AAAA;AAAA,cAAK,WAAU,YAAf;AACGW,sBADH;AAEGC;AAFH;AADF,SADF;AAOE;AAAA;AAAA,YAAK,WAAU,SAAf;AACE;AAAA;AAAA,cAAK,WAAU,QAAf;AACGF,gBADH;AAAA;AACU,iBAAKrC,KAAL,CAAWI,WADrB;AAAA;AACoCT,iBAAKiD,gBAAL,CAAsBd,MAAtB;AADpC,WADF;AAIE;AAAA;AAAA,cAAK,WAAU,aAAf;AACGnC,iBAAKkD,aAAL,CAAmB,IAAId,IAAJ,CAAS,KAAK/B,KAAL,CAAWgC,IAApB,CAAnB;AADH;AAJF;AAPF,OADF;AAkBD;;;4BACQL,K,EAAOrB,I,EAAM;AACpB,2BAAW4B,QAAX,CAAoBrC,aAAaiD,YAAjC,EAA+C,EAACC,YAAYpB,KAAb,EAAoBrB,MAAMA,IAA1B,EAA/C;AACD;;;6BACSqB,K,EAAO;AACf,2BAAWO,QAAX,CAAoBrC,aAAamD,aAAjC,EAAgDrB,KAAhD;AACD;;;gCACYA,K,EAAO;AAClB,2BAAWO,QAAX,CAAoBrC,aAAaoD,gBAAjC,EAAmDtB,KAAnD;AACD;;;mCACeuB,K,EAAOb,I,EAAMc,e,EAAiB;AAC5C,aACE;AAAA;AAAA,UAAQ,WAAW,QAAQD,KAAR,GAAgB,cAAnC,EAAmD,SAASC,eAA5D;AACE,6CAAG,WAAWd,OAAO,OAArB;AADF,OADF;AAID;;;;;;AAEHD,MAAMxB,SAAN,GAAkB;AAChBR,eAAa,iBAAUW,MAAV,CAAiBD,UADd;AAEhBgB,UAAQ,iBAAUsB,MAAV,CAAiBtC,UAFT;AAGhBkB,QAAM,iBAAUf,MAAV,CAAiBH,UAHP;AAIhBa,SAAO,iBAAUyB,MAAV,CAAiBtC,UAJR;AAKhBM,QAAM,iBAAUL,MAAV,CAAiBD,UALP;AAMhBR,QAAM,iBAAUW,MAAV,CAAiBH;AANP,CAAlB;;IASMuC,S;;;;;;;;;;;6BACM;AACR,aACE;AAAA;AAAA,UAAK,WAAU,mCAAf;AACE;AAAA;AAAA,YAAK,WAAU,QAAf;AACE;AAAA;AAAA,cAAK,WAAU,WAAf,EAA2B,IAAG,aAA9B;AACE;AAAA;AAAA,gBAAK,WAAU,eAAf;AACE,uDAAO,WAAU,QAAjB,EAA0B,MAAK,MAA/B,EAAsC,UAAU,KAAKC,OAArD,GADF;AAEE,mDAAG,WAAU,aAAb;AAFF,aADF;AAKE,mDAAK,WAAU,SAAf;AALF;AADF;AADF,OADF;AAaD;;;4BACOC,C,EAAG;AACT,2BAAWrB,QAAX,CAAoBrC,aAAa2D,kBAAjC,EAAqDD,EAAEE,MAAF,CAASC,KAA9D;AACD;;;;;;AAEHL,UAAUzC,SAAV,GAAsB;AACpBN,QAAM,iBAAUW,MAAV,CAAiBH;AADH,CAAtB","file":"../../../src/mainwindow/components/body.list.js","sourcesContent":["'use strict'\n\nimport React, {Component, PropTypes} from 'react'\n\nimport * as util from '../../util/util'\nimport dispatcher from '../../util/flux/dispatcher'\nimport * as c from '../../util/const'\nimport * as eventActions from '../flux/actions.event'\n\nexport default class BodyList extends Component {\n  render () {\n    let eventList\n    if (this.props.searchTerm) {\n      eventList = this.props.eventList.filter(event => event.productName.includes(this.props.searchTerm))\n    } else {\n      eventList = this.props.eventList\n    }\n    return (\n      <div id='bodyList'>\n        <h4 className='ui horizontal divider header'>\n          {this.props.text['History']}\n        </h4>\n        <div className='ui segment'>\n          <SearchBar text={this.props.text}/>\n          <div className='ui three column divided grid'>\n            <div className='row'>\n              <HistorySegment type={c.EVENT_TYPE.READY} eventList={eventList} text={this.props.text}/>\n              <HistorySegment type={c.EVENT_TYPE.PROCESSING} eventList={eventList} text={this.props.text}/>\n              <HistorySegment type={c.EVENT_TYPE.DONE} eventList={eventList} isArchivedVisible={this.props.isArchivedVisible} text={this.props.text}/>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nBodyList.propTypes = {\n  eventList: PropTypes.array.isRequired,\n  searchTerm: PropTypes.string.isRequired,\n  isArchivedVisible: PropTypes.bool.isRequired,\n  text: PropTypes.object.isRequired\n}\n\nclass HistorySegment extends Component {\n  render () {\n    let toggleArchived = ''\n    if (this.props.type === c.EVENT_TYPE.DONE) {\n      if (this.props.isArchivedVisible) {\n        toggleArchived = <div className='sub header'>\n          <a href='#' onClick={() => this._toggleArchived(false)}>{this.props.text['Hide archived']}</a>\n        </div>\n      } else {\n        toggleArchived = <div className='sub header'>\n          <a href='#' onClick={() => this._toggleArchived(true)}>{this.props.text['Show archived']}</a>\n        </div>\n      }\n    }\n    return (\n      <div className='column'>\n        <div className='ui medium center aligned header'>\n          {this.props.text[this._getSegmentHeader(this.props.type)]}\n          {toggleArchived}\n        </div>\n        <div className='ui middle aligned divided list'>\n          {this._getEventListView(this.props.eventList, this.props.type)}\n        </div>\n        {this.props.isArchivedVisible ? this._getArchivedHeader(this.props.text['Archived']) : ''}\n        <div className='ui middle aligned divided list'>\n          {this.props.isArchivedVisible ? this._getEventListView(this.props.eventList, c.EVENT_TYPE.ARCHIVED) : ''}\n        </div>\n      </div>\n    )\n  }\n  _getEventListView (eventList, type) {\n    return eventList.map((event, index) => {\n      if (type === event.status) {\n        return <Event key={event.id}\n          productName={event.productName}\n          amount={event.amount}\n          date={new Date(event.date)}\n          index={index}\n          type={type}\n          text={this.props.text}/>\n      } else {\n        return\n      }\n    })\n  }\n  _getSegmentHeader (type) {\n    switch (type) {\n    case c.EVENT_TYPE.READY: \n      return 'Ready'\n    case c.EVENT_TYPE.PROCESSING:\n      return 'Processing'\n    case c.EVENT_TYPE.DONE:\n      return 'Done'\n    }\n  }\n  _getArchivedHeader (archivedText) {\n    return (\n      <h5 className='ui dividing disabled header'>\n        {archivedText}\n      </h5>\n    )\n  }\n  _toggleArchived (isArchivedVisible) {\n    dispatcher.dispatch(eventActions.TOGGLE_ARCHIVED, isArchivedVisible)\n  }\n}\nHistorySegment.propTypes = {\n  type: PropTypes.string.isRequired,\n  eventList: PropTypes.array.isRequired,\n  isArchivedVisible: PropTypes.bool,\n  text: PropTypes.object.isRequired\n}\n\nclass Event extends Component {\n  render () {\n    let icon, amount\n    if (this.props.amount < 0) {\n      icon = <i className='shipping icon'></i>\n      amount = this.props.amount * -1\n    } else {\n      icon = <i className='cube icon'></i>\n      amount = this.props.amount\n    }\n\n    let leftButton, rightButton\n    switch (this.props.type) {\n    case c.EVENT_TYPE.READY:\n      leftButton = this._getIconButton('', 'remove', () => this._delete(this.props.index, this.props.text))\n      rightButton = this._getIconButton('primary', 'checkmark', () => this._approve(this.props.index))\n      break\n    case c.EVENT_TYPE.PROCESSING:\n      leftButton = this._getIconButton('', 'arrow circle left', () => this._disapprove(this.props.index))\n      rightButton = this._getIconButton('primary', 'checkmark', () => this._approve(this.props.index))\n      break\n    case c.EVENT_TYPE.DONE:\n      leftButton = this._getIconButton('', 'arrow circle left', () => this._disapprove(this.props.index))\n      rightButton = this._getIconButton('', 'archive', () => this._approve(this.props.index))\n      break\n    case c.EVENT_TYPE.ARCHIVED:\n      leftButton = this._getIconButton('', 'undo', () => this._disapprove(this.props.index))\n      break\n    }\n\n    return (\n      <div className='item'>\n        <div className='right floated content'>\n          <div className='ui buttons'>\n            {leftButton}\n            {rightButton}\n          </div>\n        </div>\n        <div className='content'>\n          <div className='header'>\n            {icon} {this.props.productName}: {util.getCurrencyValue(amount)}\n          </div>\n          <div className='description'>\n            {util.getDateString(new Date(this.props.date))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _delete (index, text) {\n    dispatcher.dispatch(eventActions.DELETE_EVENT, {eventIndex: index, text: text})\n  }\n  _approve (index) {\n    dispatcher.dispatch(eventActions.APPROVE_EVENT, index)\n  }\n  _disapprove (index) {\n    dispatcher.dispatch(eventActions.DISAPPROVE_EVENT, index)\n  }\n  _getIconButton (color, icon, onClickFunction) {\n    return (\n      <button className={'ui ' + color + ' icon button'} onClick={onClickFunction}>\n        <i className={icon + ' icon'}></i>\n      </button>)\n  }\n}\nEvent.propTypes = {\n  productName: PropTypes.string.isRequired,\n  amount: PropTypes.number.isRequired,\n  date: PropTypes.object.isRequired,\n  index: PropTypes.number.isRequired,\n  type: PropTypes.string.isRequired,\n  text: PropTypes.object.isRequired\n}\n\nclass SearchBar extends Component {\n  render () {\n    return (\n      <div className='ui one column center aligned grid'>\n        <div className='column'>\n          <div className='ui search' id='eventSearch'>\n            <div className='ui icon input'>\n              <input className='prompt' type='text' onChange={this._search}/>\n              <i className='search icon'></i>\n            </div>\n            <div className='results'></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _search(e) {\n    dispatcher.dispatch(eventActions.SEARCH_PRODUCTNAME, e.target.value)\n  }\n}\nSearchBar.propTypes = {\n  text: PropTypes.object.isRequired\n}"]}