{"version":3,"sources":["mainwindow/components/body.top.jsx"],"names":["util","eventActions","BodyTop","props","productSet","productOrder","text","newEvent","amount","_addNewEvent","dispatch","ADD_NEWEVENT","propTypes","object","isRequired","array","ProductInputForm","_selectProduct","_getOptions","map","product","id","name","e","$","removeClass","UPDATE_NEWEVENT_FIELD","field","value","target","AmountInputForm","getCurrencyValue","_changeAmount","number","TypeInputForm","_changeType","DateInputForm","calendar","type","today","formatter","date","getDateString","Date"],"mappings":"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","file":"../../../src/mainwindow/components/body.top.js","sourcesContent":["/*global $*/\n'use strict'\n\nimport React, {Component, PropTypes} from 'react'\n\nimport * as util from '../../util/util'\nimport dispatcher from '../../util/flux/dispatcher'\nimport * as eventActions from '../flux/actions.event'\n\nexport default class BodyTop extends Component {\n  render () {\n    return (\n      <div className='ui padded segment'>\n        <div className='ui container'>\n          <div className='ui form'>\n            <div className='fields'>\n              <ProductInputForm productSet={this.props.productSet} productOrder={this.props.productOrder} text={this.props.text}/>\n              <AmountInputForm amount={this.props.newEvent.amount} text={this.props.text}/>\n              <TypeInputForm text={this.props.text}/>\n              <DateInputForm text={this.props.text}/>\n            </div>\n          </div>\n          <button className='ui fluid compact button' onClick={() => this._addNewEvent()}>{this.props.text['Add']}</button>\n        </div>\n      </div>\n    )\n  }\n  _addNewEvent () {\n    dispatcher.dispatch(eventActions.ADD_NEWEVENT, this.props.newEvent)\n  }\n}\nBodyTop.propTypes = {\n  newEvent: PropTypes.object.isRequired,\n  productSet: PropTypes.object.isRequired,\n  productOrder: PropTypes.array.isRequired,\n  text: PropTypes.object.isRequired\n}\n\nclass ProductInputForm extends Component {\n  render () {\n    return (\n      <div className='six wide field' id='productInputForm'>\n        <label>{this.props.text['Product']}</label>\n        <select className='ui search dropdown' onChange={this._selectProduct}>\n          <option value=''>{this.props.text['Search a product']}</option>\n          {this._getOptions(this.props.productSet, this.props.productOrder)}\n        </select>\n      </div>\n    )\n  }\n  _getOptions (productSet, productOrder) {\n    return productOrder.map(id => {\n      let product = productSet[id]\n      return <option value={product.id} key={product.id}>{product.name}</option>\n    })\n  }\n  _selectProduct (e) {\n    $('#productInputForm').removeClass('error')\n    dispatcher.dispatch(eventActions.UPDATE_NEWEVENT_FIELD, { field: 'productId', value: e.target.value})\n  }\n}\nProductInputForm.propTypes = {\n  productSet: PropTypes.object.isRequired,\n  productOrder: PropTypes.array.isRequired,\n  text: PropTypes.object.isRequired\n}\n\nclass AmountInputForm extends Component {\n  render () {\n    return (\n      <div className='three wide field' id='amountInputForm'>\n        <label>{this.props.text['Amount']}</label>\n        <input type='text' value={util.getCurrencyValue(this.props.amount)} onChange={this._changeAmount}/>\n      </div>\n    )\n  }\n  _changeAmount (e) {\n    $('#amountInputForm').removeClass('error')\n    dispatcher.dispatch(eventActions.UPDATE_NEWEVENT_FIELD, { field: 'amount', value: e.target.value})\n  }\n}\nAmountInputForm.propTypes = {\n  amount: PropTypes.number.isRequired,\n  text: PropTypes.object.isRequired\n}\n\nclass TypeInputForm extends Component {\n  render () {\n    return (\n      <div className='three wide field'>\n        <label>{this.props.text['Type']}</label>\n        <select className='ui selection compact dropdown' onChange={this._changeType}>\n          <option value='sale'>{this.props.text['Sale']}</option>\n          <option value='production'>{this.props.text['Production']}</option>\n        </select>\n      </div>\n    )\n  }\n  _changeType (e) {\n    dispatcher.dispatch(eventActions.UPDATE_NEWEVENT_FIELD, { field: 'type', value: e.target.value})\n  }\n}\nTypeInputForm.propTypes = {\n  text: PropTypes.object.isRequired\n}\n\nclass DateInputForm extends Component {\n  componentDidMount () {\n    $('#datePicker').calendar({ \n      type: 'date',\n      today: true,\n      formatter: {\n        date: (date) => {\n          dispatcher.dispatch(eventActions.UPDATE_NEWEVENT_FIELD, { field: 'date', value: date})\n          return util.getDateString(new Date(date))\n        }\n      }\n    })\n  }\n  render () {\n    return (\n      <div className='four wide field'>\n        <label>{this.props.text['Date']}</label>\n        <div className='ui calendar' id='datePicker'>\n          <div className='ui input left icon'>\n            <i className='calendar icon'></i>\n            <input type='text' defaultValue={util.getDateString(new Date())}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nDateInputForm.propTypes = {\n  text: PropTypes.object.isRequired\n}"]}