{"version":3,"sources":["mainwindow/flux/actions.event.js"],"names":["initialize","util","c","ipc","UPDATE_NEWEVENT_FIELD","ADD_NEWEVENT","DELETE_EVENT","SEARCH_PRODUCTNAME","APPROVE_EVENT","DISAPPROVE_EVENT","TOGGLE_ARCHIVED","ipcModule","register","updateNewEventField","addNewEvent","deleteEvent","searchProductName","approveEvent","disapproveEvent","toggleArchived","arg","field","value","indexOf","replace","isNumeric","Number","setInValue","emitChange","newEventObj","validationResult","productId","$","addClass","amount","type","event","id","date","productName","getValue","get","editable","status","EVENT_TYPE","READY","eventList","insert","sort","prev","next","refineProductAmount","setValue","dialog","showMessageBox","buttons","text","defaultId","message","cancelId","index","willBeDeletedEvent","eventIndex","delete","searchTerm","approvedEvent","set","PROCESSING","DONE","ARCHIVED","isArchivedVisible","changedValue","product","undefined","changedProduct"],"mappings":"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","file":"../../../src/mainwindow/flux/actions.event.js","sourcesContent":["/*global $*/\n'use strict'\n\nimport {Map} from 'immutable'\nimport {remote} from 'electron'\n\nimport dispatcher from '../../util/flux/dispatcher'\nimport store from './store.main'\nimport * as util from '../../util/util'\nimport * as c from '../../util/const'\nimport generateId from '../../util/id.generator'\n\nlet ipc = {}\n\nexport const UPDATE_NEWEVENT_FIELD = 'update-newevent-field'\nexport const ADD_NEWEVENT = 'add-newevent'\nexport const DELETE_EVENT = 'delete-event'\nexport const SEARCH_PRODUCTNAME = 'search-productname'\nexport const APPROVE_EVENT = 'approve-event'\nexport const DISAPPROVE_EVENT = 'disapprove-event'\nexport const TOGGLE_ARCHIVED = 'toggle-archived'\n\nexport function initialize (ipcModule) {\n  ipc = ipcModule\n  ipc //TODO: should be deleted.\n  dispatcher.register(UPDATE_NEWEVENT_FIELD, updateNewEventField)\n  dispatcher.register(ADD_NEWEVENT, addNewEvent)\n  dispatcher.register(DELETE_EVENT, deleteEvent)\n  dispatcher.register(SEARCH_PRODUCTNAME, searchProductName)\n  dispatcher.register(APPROVE_EVENT, approveEvent)\n  dispatcher.register(DISAPPROVE_EVENT, disapproveEvent)\n  dispatcher.register(TOGGLE_ARCHIVED, toggleArchived)\n}\n\n/**\n * update newEvent field\n *\n * @param      {object}  arg     {field: string, value: string}\n */\nfunction updateNewEventField (arg) {\n  if (arg.field === 'amount') {\n    if (arg.value.indexOf(',') !== -1) {\n      arg.value = arg.value.replace(',', '')\n    }\n    if (!util.isNumeric(arg.value)) {\n      return\n    }\n    arg.value = Number(arg.value)\n  }\n  store.setInValue(['newEvent', arg.field], arg.value)\n  store.emitChange()\n}\n\n/**\n * Adds a new event.\n *\n * @param      {object}  newEventObj  The new event object\n */\nfunction addNewEvent (newEventObj) {\n  /*validate fields*/\n  let validationResult = true\n  if (newEventObj.productId === '') {\n    $('#productInputForm').addClass('error')\n    validationResult = false\n  }\n  if (newEventObj.amount === 0) {\n    $('#amountInputForm').addClass('error')\n    validationResult = false\n  }\n  if (!validationResult) {\n    return\n  }\n\n  /*create an object of a new event*/\n  let amount = newEventObj.amount\n  let productId = newEventObj.productId\n  if (newEventObj.type === 'sale') {\n    amount = amount * -1\n  }\n  let event = new Map({\n    id: generateId('event'),\n    date: newEventObj.date,\n    amount: amount,\n    productId: productId,\n    productName: store.getValue('productSet').get(productId).get('name'),\n    editable: false,\n    status: c.EVENT_TYPE.READY\n  })\n\n  /*insert the new one and sort the list*/\n  let eventList = store.getValue('eventList')\n    .insert(0, event)\n    .sort((prev, next) => {\n      if (prev.get('date') < next.get('date')) {\n        return 1\n      } else {\n        return 0\n      }\n    })\n\n  refineProductAmount(event.get('productId'), event.get('amount'))\n  store.setInValue(['newEvent', 'amount'], 0)\n  store.setValue('eventList', eventList)\n  store.emitChange()\n}\n\n/**\n * Delete an event\n *\n * @param      {object}  arg     {eventIndex: number, text: object}\n */\nfunction deleteEvent (arg) {\n  remote.dialog.showMessageBox({\n    type: 'question',\n    buttons: [arg.text['OK'], arg.text['Cancel']],\n    defaultId: 1,\n    message: arg.text['Will you delete this event?'],\n    cancelId: 1\n  }, (index) => {\n    if (index === 1) {\n      return\n    } else {\n      let willBeDeletedEvent = store.getValue('eventList').get(arg.eventIndex)\n      refineProductAmount(willBeDeletedEvent.get('productId'), (-1 * willBeDeletedEvent.get('amount')))\n      store.setValue('eventList', store.getValue('eventList').delete(arg.eventIndex))\n      store.emitChange()\n    }\n  })\n}\n\nfunction searchProductName (searchTerm) {\n  store.setValue('searchTerm', searchTerm)\n  store.emitChange()\n}\n\nfunction approveEvent (index) {\n  let event = store.getValue('eventList').get(index)\n  let approvedEvent\n  switch (event.get('status')) {\n  case c.EVENT_TYPE.READY:\n    approvedEvent = event.set('status', c.EVENT_TYPE.PROCESSING)\n    break\n  case c.EVENT_TYPE.PROCESSING:\n    approvedEvent = event.set('status', c.EVENT_TYPE.DONE)\n    break\n  case c.EVENT_TYPE.DONE:\n    approvedEvent = event.set('status', c.EVENT_TYPE.ARCHIVED)\n    break\n  }\n\n  store.setValue('eventList', store.getValue('eventList').set(index, approvedEvent))\n  store.emitChange()\n}\n\nfunction disapproveEvent (index) {\n  let event = store.getValue('eventList').get(index)\n  let approvedEvent\n  switch (event.get('status')) {\n  case c.EVENT_TYPE.PROCESSING:\n    approvedEvent = event.set('status', c.EVENT_TYPE.READY)\n    break\n  case c.EVENT_TYPE.DONE:\n    approvedEvent = event.set('status', c.EVENT_TYPE.PROCESSING)\n    break\n  case c.EVENT_TYPE.ARCHIVED:\n    approvedEvent = event.set('status', c.EVENT_TYPE.DONE)\n    break\n  }\n\n  store.setValue('eventList', store.getValue('eventList').set(index, approvedEvent))\n  store.emitChange()\n}\n\nfunction toggleArchived (isArchivedVisible) {\n  store.setValue('isArchivedVisible', isArchivedVisible)\n  store.emitChange()\n}\n\nfunction refineProductAmount (productId, changedValue) {\n  let product = store.getValue('productSet').get(productId)\n  if (product !== undefined) {\n    let changedProduct = product.set('amount', product.get('amount') + changedValue)\n    store.setValue('productSet', store.getValue('productSet').set(productId, changedProduct))\n  }\n}"]}