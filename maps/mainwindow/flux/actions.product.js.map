{"version":3,"sources":["mainwindow/flux/actions.product.js"],"names":["initialize","util","ipc","ADD_NEWPRODUCT","ISVALIDNAME_FOR_PRODUCT","TOGGLE_PRODUCT_EDITABLE","SAVE_PRODUCT_NAME","REMOVE_PRODUCT","ipcModule","register","addNewProduct","checkName","toggleProductEditable","saveProductName","removeProduct","newProductObj","isValidNameForProduct","name","product","id","amount","editable","productSet","getValue","set","get","productOrder","push","setValue","emitChange","arg","productId","undefined","toggledProduct","dialog","showErrorBox","text","withMutations","eventList","asMutable","i","size","asImmutable","showMessageBox","type","buttons","defaultId","message","cancelId","index","order","findKey","delete","productIdx","splice","filterNot","event","find"],"mappings":"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","file":"../../../src/mainwindow/flux/actions.product.js","sourcesContent":["/*eslint-disable no-unused-vars*/\n'use strict'\n\nimport {Map, List} from 'immutable'\nimport {remote} from 'electron'\n\nimport dispatcher from '../../util/flux/dispatcher'\nimport store from './store.main'\nimport * as util from '../../util/util'\nimport generateId from '../../util/id.generator'\n\nlet ipc = {}\n\nexport const ADD_NEWPRODUCT = 'add-newproduct'\nexport const ISVALIDNAME_FOR_PRODUCT = 'isvalidname-for-product'\nexport const TOGGLE_PRODUCT_EDITABLE = 'toggle-product-editable'\nexport const SAVE_PRODUCT_NAME = 'save-product-name'\nexport const REMOVE_PRODUCT = 'remove-product'\n\nexport function initialize (ipcModule) {\n  ipc = ipcModule\n  ipc //TODO: should be deleted.\n  dispatcher.register(ADD_NEWPRODUCT, addNewProduct)\n  dispatcher.register(ISVALIDNAME_FOR_PRODUCT, checkName)\n  dispatcher.register(TOGGLE_PRODUCT_EDITABLE, toggleProductEditable)\n  dispatcher.register(SAVE_PRODUCT_NAME, saveProductName)\n  dispatcher.register(REMOVE_PRODUCT, removeProduct)\n}\n\nfunction addNewProduct (newProductObj) {\n  if (!isValidNameForProduct(newProductObj.name)) {\n    return // TODO: show the error\n  }\n\n  let product = new Map({\n    id: generateId('product'),\n    name: newProductObj.name,\n    amount: 0,\n    editable: false\n  })\n\n  // let productList = store.getValue('productList').push(product)\n  let productSet = store.getValue('productSet').set(product.get('id'), product)\n  let productOrder = store.getValue('productOrder').push(product.get('id'))\n  \n  store.setValue('productSet', productSet)\n  store.setValue('productOrder', productOrder)\n  store.emitChange()\n}\n\nfunction checkName (name) {\n  store.setValue('isValidNameForProduct', isValidNameForProduct(name))\n  store.emitChange()\n}\n\n/**\n * Toggle the editable of a product\n *\n * @param      {object}  arg     {productId: string, editable: bool}\n */\nfunction toggleProductEditable (arg) {\n  let product = store.getValue('productSet').get(arg.productId)\n  if (product !== undefined) {\n    let toggledProduct = product.set('editable', arg.editable)\n    store.setValue('productSet', store.getValue('productSet').set(arg.productId, toggledProduct))\n    store.emitChange()\n  }\n}\n\n/**\n * Saves a product name.\n *\n * @param      {object}  arg     {productId: number, name: string, productOrder: array<number>, text: object}\n */\nfunction saveProductName (arg) {\n  let product = store.getValue('productSet').get(arg.productId)\n  if (product !== undefined) {\n    if (product.get('name') !== arg.name && !isValidNameForProduct(arg.name)) {\n      return remote.dialog.showErrorBox(arg.text['Duplicated Name'], arg.text['There is the same name in the list.'])\n    }\n\n    let toggledProduct = product.withMutations(product => {\n      product.set('editable', false).set('name', arg.name)\n    })\n\n    let eventList = store.getValue('eventList').asMutable()\n    for (let i = 0; i < eventList.size; i++) {\n      if (eventList.get(i).get('productId') === arg.productId) {\n        eventList.set(i, eventList.get(i).set('productName', arg.name))\n      }\n    }\n    \n    store.setValue('productSet', store.getValue('productSet').set(arg.productId, toggledProduct))\n    store.setValue('eventList', eventList.asImmutable())\n    store.setValue('productOrder', List(arg.productOrder))\n    store.emitChange()\n  }\n}\n\n/**\n * Removes a product.\n *\n * @param      {object}  arg     {productId: number, text: object}\n */\nfunction removeProduct (arg) {\n  let product = store.getValue('productSet').get(arg.productId)\n  if (product !== undefined) {\n    remote.dialog.showMessageBox({\n      type: 'question',\n      buttons: [arg.text['OK'], arg.text['Cancel']],\n      defaultId: 1,\n      message: arg.text['Will you delete this product? Every related event will be deleted together.'],\n      cancelId: 1\n    }, (index) => {\n      if (index === 1) {\n        return\n      } else {\n        let order = store.getValue('productOrder').findKey(id => id === arg.productId)\n        store.setValue('productSet', store.getValue('productSet').delete(arg.productIdx))\n        store.setValue('productOrder', store.getValue('productOrder').splice(order, 1))\n        store.setValue('eventList', store.getValue('eventList').filterNot(event => event.get('productId') === arg.productId))\n        store.emitChange()\n      }\n    })\n  }\n}\n\nfunction isValidNameForProduct (name) {\n  return store.getValue('productSet').find(product => {\n    return product.get('name') === name\n  }) === undefined\n}"]}